0 info it worked if it ends with ok
1 verbose cli [ 'c:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'c:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@1.4.9
3 info using node@v0.10.28
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . C:\Users\Administrator\AppData\Roaming\npm-cache\3a52ce78-.lock
10 verbose tar pack [ 'C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\npm-18956-iaDXx1bl\\1416194917200-0.6778254841919988\\tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball C:\Users\ADMINI~1\AppData\Local\Temp\npm-18956-iaDXx1bl\1416194917200-0.6778254841919988\tmp.tgz
12 verbose folder .
13 info prepublish passport-naver@1.0.2
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. C:\Users\Administrator\AppData\Roaming\npm-cache\1f1177db-tar.lock
16 silly lockFile b0e8e66c-17200-0-6778254841919988-tmp-tgz tar://C:\Users\ADMINI~1\AppData\Local\Temp\npm-18956-iaDXx1bl\1416194917200-0.6778254841919988\tmp.tgz
17 verbose lock tar://C:\Users\ADMINI~1\AppData\Local\Temp\npm-18956-iaDXx1bl\1416194917200-0.6778254841919988\tmp.tgz C:\Users\Administrator\AppData\Roaming\npm-cache\b0e8e66c-17200-0-6778254841919988-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile b0e8e66c-17200-0-6778254841919988-tmp-tgz tar://C:\Users\ADMINI~1\AppData\Local\Temp\npm-18956-iaDXx1bl\1416194917200-0.6778254841919988\tmp.tgz
21 silly lockFile b0e8e66c-17200-0-6778254841919988-tmp-tgz tar://C:\Users\ADMINI~1\AppData\Local\Temp\npm-18956-iaDXx1bl\1416194917200-0.6778254841919988\tmp.tgz
22 verbose tar unpack C:\Users\ADMINI~1\AppData\Local\Temp\npm-18956-iaDXx1bl\1416194917200-0.6778254841919988\tmp.tgz
23 silly lockFile 450d3b0e-che-passport-naver-1-0-2-package tar://C:\Users\Administrator\AppData\Roaming\npm-cache\passport-naver\1.0.2\package
24 verbose lock tar://C:\Users\Administrator\AppData\Roaming\npm-cache\passport-naver\1.0.2\package C:\Users\Administrator\AppData\Roaming\npm-cache\450d3b0e-che-passport-naver-1-0-2-package.lock
25 silly lockFile b0e8e66c-17200-0-6778254841919988-tmp-tgz tar://C:\Users\ADMINI~1\AppData\Local\Temp\npm-18956-iaDXx1bl\1416194917200-0.6778254841919988\tmp.tgz
26 verbose lock tar://C:\Users\ADMINI~1\AppData\Local\Temp\npm-18956-iaDXx1bl\1416194917200-0.6778254841919988\tmp.tgz C:\Users\Administrator\AppData\Roaming\npm-cache\b0e8e66c-17200-0-6778254841919988-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
30 silly gunzTarPerm extractEntry .npmignore
31 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
32 silly gunzTarPerm extractEntry README.md
33 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
34 silly gunzTarPerm extractEntry LICENSE
35 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
36 silly gunzTarPerm extractEntry examples/package.json
37 silly gunzTarPerm modified mode [ 'examples/package.json', 438, 420 ]
38 silly gunzTarPerm extractEntry examples/app.js
39 silly gunzTarPerm modified mode [ 'examples/app.js', 438, 420 ]
40 silly gunzTarPerm extractEntry examples/views/account.jade
41 silly gunzTarPerm modified mode [ 'examples/views/account.jade', 438, 420 ]
42 silly gunzTarPerm extractEntry examples/views/index.jade
43 silly gunzTarPerm modified mode [ 'examples/views/index.jade', 438, 420 ]
44 silly gunzTarPerm extractEntry examples/views/layout.jade
45 silly gunzTarPerm modified mode [ 'examples/views/layout.jade', 438, 420 ]
46 silly gunzTarPerm extractEntry examples/views/login.jade
47 silly gunzTarPerm modified mode [ 'examples/views/login.jade', 438, 420 ]
48 silly gunzTarPerm extractEntry lib/index.js
49 silly gunzTarPerm modified mode [ 'lib/index.js', 438, 420 ]
50 silly gunzTarPerm extractEntry lib/strategy.js
51 silly gunzTarPerm modified mode [ 'lib/strategy.js', 438, 420 ]
52 silly lockFile 450d3b0e-che-passport-naver-1-0-2-package tar://C:\Users\Administrator\AppData\Roaming\npm-cache\passport-naver\1.0.2\package
53 silly lockFile 450d3b0e-che-passport-naver-1-0-2-package tar://C:\Users\Administrator\AppData\Roaming\npm-cache\passport-naver\1.0.2\package
54 silly lockFile b0e8e66c-17200-0-6778254841919988-tmp-tgz tar://C:\Users\ADMINI~1\AppData\Local\Temp\npm-18956-iaDXx1bl\1416194917200-0.6778254841919988\tmp.tgz
55 silly lockFile b0e8e66c-17200-0-6778254841919988-tmp-tgz tar://C:\Users\ADMINI~1\AppData\Local\Temp\npm-18956-iaDXx1bl\1416194917200-0.6778254841919988\tmp.tgz
56 silly lockFile 3a52ce78- .
57 silly lockFile 3a52ce78- .
58 silly publish { name: 'passport-naver',
58 silly publish   version: '1.0.2',
58 silly publish   description: 'Naver authentication strategy for Passport',
58 silly publish   keywords: [ 'passport', 'naver', 'auth', 'oauth', 'authentication', 'oauth2' ],
58 silly publish   repository:
58 silly publish    { type: 'git',
58 silly publish      url: 'git://github.com/naver/passport-naver.git' },
58 silly publish   bugs: { url: 'https://github.com/naver/passport-naver/issues' },
58 silly publish   author:
58 silly publish    { name: 'Young-il Cho',
58 silly publish      email: 'youngil.cho@navercorp.com',
58 silly publish      url: 'http://github.com/terzeron' },
58 silly publish   contributors:
58 silly publish    [ { name: 'Chanhee Kim', email: 'chanhee.kim@navercorp.com' },
58 silly publish      { name: 'Seunglak Choi', email: 'seunglak@gmail.com' } ],
58 silly publish   licenses: [ { type: 'MIT', url: 'http://www.opensource.org/licenses/MIT' } ],
58 silly publish   main: './lib',
58 silly publish   dependencies: { 'passport-oauth': '~0.1.4', xml2js: '^0.4.4' },
58 silly publish   readmeFilename: 'README.md',
58 silly publish   homepage: 'https://github.com/naver/passport-naver',
58 silly publish   readme: '# Passport-Naver\r\n\r\n[Passport](http://passportjs.org/) strategies for authenticating with [Naver](http://www.naver.com/)\r\nusing OAuth 2.0.\r\n\r\nThis module lets you authenticate using Naver in your Node.js applications.\r\nBy plugging into Passport, Naver authentication can be easily and\r\nunobtrusively integrated into any application or framework that supports\r\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\r\n[Express](http://expressjs.com/).\r\n\r\n## Install\r\n\r\n    $ npm install passport-naver\r\n\r\n## Usage of OAuth 2.0\r\n\r\n#### Configure Strategy\r\n\r\nThe Naver OAuth 2.0 authentication strategy authenticates users using a Naver\r\naccount and OAuth 2.0 tokens.  The strategy requires a `verify` callback, which\r\naccepts these credentials and calls `done` providing a user, as well as\r\n`options` specifying a client ID, client secret, and callback URL.\r\n\r\n    var NaverStrategy = require(\'passport-naver\').Strategy;\r\n\r\n    passport.use(new NaverStrategy({\r\n            clientID: config.naver.clientID,\r\n            clientSecret: config.naver.clientSecret,\r\n            callbackURL: config.naver.callbackURL\r\n\t\t},\r\n        function(accessToken, refreshToken, profile, done) {\r\n            User.findOne({\r\n                \'naver.id\': profile.id\r\n            }, function(err, user) {\r\n                if (!user) {\r\n                    user = new User({\r\n                        name: profile.displayName,\r\n                        email: profile.emails[0].value,\r\n                        username: profile.displayName,\r\n                        provider: \'naver\',\r\n                        naver: profile._json\r\n                    });\r\n                    user.save(function(err) {\r\n                        if (err) console.log(err);\r\n                        return done(err, user);\r\n                    });\r\n                } else {\r\n                    return done(err, user);\r\n                }\r\n            });\r\n        }\r\n    ));\r\n\r\n\r\n#### Authenticate Requests\r\n\r\nUse `passport.authenticate()`, specifying the `\'naver\'` strategy, to\r\nauthenticate requests.\r\n\r\nFor example, as route middleware in an [Express](http://expressjs.com/)\r\napplication:\r\n\r\n    // Setting the naver oauth routes\r\n    app.route(\'/auth/naver\')\r\n        .get(passport.authenticate(\'naver\', {\r\n            failureRedirect: \'#!/auth/login\'\r\n        }), users.signin);\r\n\r\n    // creates an account if no account of the new user\r\n    app.route(\'/auth/naver/callback\')\r\n        .get(passport.authenticate(\'naver\', {\r\n            failureRedirect: \'#!/auth/login\'\r\n        }), users.createAccount, users.authCallback);\r\n        \r\n## App Registration for the Secret Generation\r\n\r\nYou need to register your application from Naver Developer Center.\r\n<[Naver Developer Center](https://developer.naver.com/openapi/register/login.nhn)>\r\n\r\nYou can get client id & secret for your application after the approval process of Naver Corp.\r\n\r\nAfter the client id & secret are issued, assign them to the following variables.\r\n  \r\n            clientID: config.naver.clientID,\r\n            clientSecret: config.naver.clientSecret,\r\n            callbackURL: config.naver.callbackURL,\r\n\r\n\r\n## Examples\r\n\r\nYou can execute the following application from the \'examples\' directory.\r\n\t\r\n\t$ npm install \r\n\t$ node app.js\r\n\r\n\tvar express = require(\'express\')\r\n\t\t, passport = require(\'passport\')\r\n\t\t, session = require(\'express-session\')\r\n\t\t, NaverStrategy = require(\'../lib/index.js\').Strategy;\r\n\t\t\r\n\tvar client_id = \'************ your app client id ************\';\r\n\tvar client_secret = \'************ your app client secret ************\';\r\n\tvar callback_url = \'************ your app callback url ************\';\r\n\t\r\n\tpassport.serializeUser(function(user, done) {\r\n\t\tdone(null, user);\r\n\t});\r\n\t\r\n\tpassport.deserializeUser(function(obj, done) {\r\n\t\tdone(null, obj);\r\n\t});\r\n\t\r\n\tpassport.use(new NaverStrategy({\r\n\t    clientID: client_id,\r\n\t    clientSecret: client_secret,\r\n\t    callbackURL: callback_url,\r\n        svcType: 0  // optional. see http://gamedev.naver.com/index.php/%EC%98%A8%EB%9D%BC%EC%9D%B8%EA%B2%8C%EC%9E%84:OAuth_2.0_API\r\n\t}, function(accessToken, refreshToken, profile, done) {\r\n\t\tprocess.nextTick(function () {\r\n\t\t\t//console.log("profile=");\r\n\t\t\t//console.log(profile);\r\n\t\t\t// data to be saved in DB\r\n\t\t\tuser = {\r\n\t\t\t\tname: profile.displayName,\r\n\t\t\t\temail: profile.emails[0].value,\r\n\t\t\t\tusername: profile.displayName,\r\n\t\t\t\tprovider: \'naver\',\r\n\t\t\t\tnaver: profile._json\r\n\t\t\t};\r\n\t\t\t//console.log("user=");\r\n\t\t\t//console.log(user);\r\n\t\t\treturn done(null, profile);\r\n\t\t});\r\n\t}));\r\n\t\r\n\tvar app = express();\r\n\t\r\n\tapp.use(session({secret: \'keyboard cat\'}));\r\n\tapp.use(passport.initialize());\r\n\tapp.use(passport.session());\r\n\t\r\n\tapp.set(\'view engine\', \'jade\');\r\n\tapp.set(\'views\', __dirname + \'/views/\');\r\n\t\r\n\tapp.get(\'/\', function(req, res){\r\n\t\tres.render(\'index\', { user: req.user });\r\n\t});\r\n\t\r\n\tapp.get(\'/account\', ensureAuthenticated, function(req, res) {\r\n\t\tconsole.log(req.user);\r\n\t\tres.render(\'account\', { user: req.user });\r\n\t});\r\n\t\r\n\tapp.get(\'/login\', function(req, res){\r\n\t\tres.render(\'login\', { user: req.user });\r\n\t});\r\n\t\r\n\t// Setting the naver oauth routes\r\n\tapp.get(\'/auth/naver\', \r\n\t\tpassport.authenticate(\'naver\', null), function(req, res) {\r\n\t    \tconsole.log(\'/auth/naver failed, stopped\');\r\n\t    });\r\n\t\r\n\t// creates an account if no account of the new user\r\n\tapp.get(\'/auth/naver/callback\', \r\n\t\tpassport.authenticate(\'naver\', {\r\n\t        failureRedirect: \'#!/auth/login\'\r\n\t    }), function(req, res) {\r\n\t    \tres.redirect(\'/\'); \r\n\t    });\r\n\t\r\n\tapp.get(\'/logout\', function(req, res){\r\n\t\treq.logout();\r\n\t\tres.redirect(\'/\');\r\n\t});\r\n\t\r\n\tapp.listen(3000);\r\n\t\r\n\tfunction ensureAuthenticated(req, res, next) {\r\n\t\tif (req.isAuthenticated()) { return next(); }\r\n\t\tres.redirect(\'/login\');\r\n\t}\r\n\r\n\r\n## Thanks to \r\n\r\n  - [Jared Hanson](http://github.com/jaredhanson)\r\n  - Chanhee Kim(chanhee.kim@navercorp.com)\r\n\r\n## Author\r\n\r\n  - [Young-il Cho](http://github.com/terzeron)\r\n  - [Seunglak Choi](http://github.com/seunglak)\r\n  \r\n## License\r\n\r\n[The MIT License](http://opensource.org/licenses/MIT)\r\n\r\nCopyright (c) 2014 Naver Corp.\r\n',
58 silly publish   _id: 'passport-naver@1.0.2',
58 silly publish   _shasum: 'f99456fa12c806e06415d69f46946bc824f89aa6',
58 silly publish   _from: '.' }
59 verbose url raw passport-naver
60 verbose url resolving [ 'https://registry.npmjs.org/', './passport-naver' ]
61 verbose url resolved https://registry.npmjs.org/passport-naver
62 info trying registry request attempt 1 at 12:28:37
63 http PUT https://registry.npmjs.org/passport-naver
64 http 403 https://registry.npmjs.org/passport-naver
65 verbose headers { date: 'Mon, 17 Nov 2014 03:28:53 GMT',
65 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
65 verbose headers   'content-type': 'application/json',
65 verbose headers   'cache-control': 'max-age=60',
65 verbose headers   'content-length': '12097',
65 verbose headers   'accept-ranges': 'bytes',
65 verbose headers   via: '1.1 varnish',
65 verbose headers   'x-served-by': 'cache-ty66-TYO',
65 verbose headers   'x-cache': 'MISS',
65 verbose headers   'x-cache-hits': '0',
65 verbose headers   'x-timer': 'S1416194933.430654,VS0,VE333',
65 verbose headers   'keep-alive': 'timeout=10, max=50',
65 verbose headers   connection: 'Keep-Alive' }
66 error publish Failed PUT 403
67 error Error: forbidden cannot modify pre-existing version: 1.0.2
67 error old={"name":"passport-naver","version":"1.0.2","description":"Naver authentication strategy for Passport","keywords":["passport","naver","auth","oauth","authentication","oauth2"],"repository":{"type":"git","url":"git://github.com/naver/passport-naver.git"},"bugs":{"url":"https://github.com/naver/passport-naver/issues"},"author":{"name":"Young-il Cho","email":"youngil.cho@navercorp.com","url":"http://github.com/terzeron"},"contributors":[{"name":"Chanhee Kim","email":"chanhee.kim@navercorp.com"}],"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"main":"./lib","dependencies":{"passport-oauth":"~0.1.4","xml2js":"^0.4.4"},"homepage":"https://github.com/naver/passport-naver","gitHead":"a92947eb8e810c4b7577a0eb07d97c54b6144cb2","_id":"passport-naver@1.0.2","scripts":{},"_shasum":"e2aa9c79487384a8815e0a44541ab9245b494c1c","_from":".","_npmVersion":"1.4.23","_npmUser":{"name":"terzeron","email":"youngil.cho@navercorp.com"},"maintainers":[{"name":"terzeron","email":"youngil.cho@navercorp.com"}],"dist":{"shasum":"e2aa9c79487384a8815e0a44541ab9245b494c1c","tarball":"http://registry.npmjs.org/passport-naver/-/passport-naver-1.0.2.tgz"}}
67 error new={"name":"passport-naver","version":"1.0.2","description":"Naver authentication strategy for Passport","keywords":["passport","naver","auth","oauth","authentication","oauth2"],"repository":{"type":"git","url":"git://github.com/naver/passport-naver.git"},"bugs":{"url":"https://github.com/naver/passport-naver/issues"},"author":{"name":"Young-il Cho","email":"youngil.cho@navercorp.com","url":"http://github.com/terzeron"},"contributors":[{"name":"Chanhee Kim","email":"chanhee.kim@navercorp.com"},{"name":"Seunglak Choi","email":"seunglak@gmail.com"}],"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"main":"./lib","dependencies":{"passport-oauth":"~0.1.4","xml2js":"^0.4.4"},"readmeFilename":"README.md","homepage":"https://github.com/naver/passport-naver","readme":"# Passport-Naver\u000d\u000a\u000d\u000a[Passport](http://passportjs.org/) strategies for authenticating with [Naver](http://www.naver.com/)\u000d\u000ausing OAuth 2.0.\u000d\u000a\u000d\u000aThis module lets you authenticate using Naver in your Node.js applications.\u000d\u000aBy plugging into Passport, Naver authentication can be easily and\u000d\u000aunobtrusively integrated into any application or framework that supports\u000d\u000a[Connect](http://www.senchalabs.org/connect/)-style middleware, including\u000d\u000a[Express](http://expressjs.com/).\u000d\u000a\u000d\u000a## Install\u000d\u000a\u000d\u000a    $ npm install passport-naver\u000d\u000a\u000d\u000a## Usage of OAuth 2.0\u000d\u000a\u000d\u000a#### Configure Strategy\u000d\u000a\u000d\u000aThe Naver OAuth 2.0 authentication strategy authenticates users using a Naver\u000d\u000aaccount and OAuth 2.0 tokens.  The strategy requires a `verify` callback, which\u000d\u000aaccepts these credentials and calls `done` providing a user, as well as\u000d\u000a`options` specifying a client ID, client secret, and callback URL.\u000d\u000a\u000d\u000a    var NaverStrategy = require('passport-naver').Strategy;\u000d\u000a\u000d\u000a    passport.use(new NaverStrategy({\u000d\u000a            clientID: config.naver.clientID,\u000d\u000a            clientSecret: config.naver.clientSecret,\u000d\u000a            callbackURL: config.naver.callbackURL\u000d\u000a\u0009\u0009},\u000d\u000a        function(accessToken, refreshToken, profile, done) {\u000d\u000a            User.findOne({\u000d\u000a                'naver.id': profile.id\u000d\u000a            }, function(err, user) {\u000d\u000a                if (!user) {\u000d\u000a                    user = new User({\u000d\u000a                        name: profile.displayName,\u000d\u000a                        email: profile.emails[0].value,\u000d\u000a                        username: profile.displayName,\u000d\u000a                        provider: 'naver',\u000d\u000a                        naver: profile._json\u000d\u000a                    });\u000d\u000a                    user.save(function(err) {\u000d\u000a                        if (err) console.log(err);\u000d\u000a                        return done(err, user);\u000d\u000a                    });\u000d\u000a                } else {\u000d\u000a                    return done(err, user);\u000d\u000a                }\u000d\u000a            });\u000d\u000a        }\u000d\u000a    ));\u000d\u000a\u000d\u000a\u000d\u000a#### Authenticate Requests\u000d\u000a\u000d\u000aUse `passport.authenticate()`, specifying the `'naver'` strategy, to\u000d\u000aauthenticate requests.\u000d\u000a\u000d\u000aFor example, as route middleware in an [Express](http://expressjs.com/)\u000d\u000aapplication:\u000d\u000a\u000d\u000a    // Setting the naver oauth routes\u000d\u000a    app.route('/auth/naver')\u000d\u000a        .get(passport.authenticate('naver', {\u000d\u000a            failureRedirect: '#!/auth/login'\u000d\u000a        }), users.signin);\u000d\u000a\u000d\u000a    // creates an account if no account of the new user\u000d\u000a    app.route('/auth/naver/callback')\u000d\u000a        .get(passport.authenticate('naver', {\u000d\u000a            failureRedirect: '#!/auth/login'\u000d\u000a        }), users.createAccount, users.authCallback);\u000d\u000a        \u000d\u000a## App Registration for the Secret Generation\u000d\u000a\u000d\u000aYou need to register your application from Naver Developer Center.\u000d\u000a<[Naver Developer Center](https://developer.naver.com/openapi/register/login.nhn)>\u000d\u000a\u000d\u000aYou can get client id & secret for your application after the approval process of Naver Corp.\u000d\u000a\u000d\u000aAfter the client id & secret are issued, assign them to the following variables.\u000d\u000a  \u000d\u000a            clientID: config.naver.clientID,\u000d\u000a            clientSecret: config.naver.clientSecret,\u000d\u000a            callbackURL: config.naver.callbackURL,\u000d\u000a\u000d\u000a\u000d\u000a## Examples\u000d\u000a\u000d\u000aYou can execute the following application from the 'examples' directory.\u000d\u000a\u0009\u000d\u000a\u0009$ npm install \u000d\u000a\u0009$ node app.js\u000d\u000a\u000d\u000a\u0009var express = require('express')\u000d\u000a\u0009\u0009, passport = require('passport')\u000d\u000a\u0009\u0009, session = require('express-session')\u000d\u000a\u0009\u0009, NaverStrategy = require('../lib/index.js').Strategy;\u000d\u000a\u0009\u0009\u000d\u000a\u0009var client_id = '************ your app client id ************';\u000d\u000a\u0009var client_secret = '************ your app client secret ************';\u000d\u000a\u0009var callback_url = '************ your app callback url ************';\u000d\u000a\u0009\u000d\u000a\u0009passport.serializeUser(function(user, done) {\u000d\u000a\u0009\u0009done(null, user);\u000d\u000a\u0009});\u000d\u000a\u0009\u000d\u000a\u0009passport.deserializeUser(function(obj, done) {\u000d\u000a\u0009\u0009done(null, obj);\u000d\u000a\u0009});\u000d\u000a\u0009\u000d\u000a\u0009passport.use(new NaverStrategy({\u000d\u000a\u0009    clientID: client_id,\u000d\u000a\u0009    clientSecret: client_secret,\u000d\u000a\u0009    callbackURL: callback_url,\u000d\u000a        svcType: 0  // optional. see http://gamedev.naver.com/index.php/%EC%98%A8%EB%9D%BC%EC%9D%B8%EA%B2%8C%EC%9E%84:OAuth_2.0_API\u000d\u000a\u0009}, function(accessToken, refreshToken, profile, done) {\u000d\u000a\u0009\u0009process.nextTick(function () {\u000d\u000a\u0009\u0009\u0009//console.log(\"profile=\");\u000d\u000a\u0009\u0009\u0009//console.log(profile);\u000d\u000a\u0009\u0009\u0009// data to be saved in DB\u000d\u000a\u0009\u0009\u0009user = {\u000d\u000a\u0009\u0009\u0009\u0009name: profile.displayName,\u000d\u000a\u0009\u0009\u0009\u0009email: profile.emails[0].value,\u000d\u000a\u0009\u0009\u0009\u0009username: profile.displayName,\u000d\u000a\u0009\u0009\u0009\u0009provider: 'naver',\u000d\u000a\u0009\u0009\u0009\u0009naver: profile._json\u000d\u000a\u0009\u0009\u0009};\u000d\u000a\u0009\u0009\u0009//console.log(\"user=\");\u000d\u000a\u0009\u0009\u0009//console.log(user);\u000d\u000a\u0009\u0009\u0009return done(null, profile);\u000d\u000a\u0009\u0009});\u000d\u000a\u0009}));\u000d\u000a\u0009\u000d\u000a\u0009var app = express();\u000d\u000a\u0009\u000d\u000a\u0009app.use(session({secret: 'keyboard cat'}));\u000d\u000a\u0009app.use(passport.initialize());\u000d\u000a\u0009app.use(passport.session());\u000d\u000a\u0009\u000d\u000a\u0009app.set('view engine', 'jade');\u000d\u000a\u0009app.set('views', __dirname + '/views/');\u000d\u000a\u0009\u000d\u000a\u0009app.get('/', function(req, res){\u000d\u000a\u0009\u0009res.render('index', { user: req.user });\u000d\u000a\u0009});\u000d\u000a\u0009\u000d\u000a\u0009app.get('/account', ensureAuthenticated, function(req, res) {\u000d\u000a\u0009\u0009console.log(req.user);\u000d\u000a\u0009\u0009res.render('account', { user: req.user });\u000d\u000a\u0009});\u000d\u000a\u0009\u000d\u000a\u0009app.get('/login', function(req, res){\u000d\u000a\u0009\u0009res.render('login', { user: req.user });\u000d\u000a\u0009});\u000d\u000a\u0009\u000d\u000a\u0009// Setting the naver oauth routes\u000d\u000a\u0009app.get('/auth/naver', \u000d\u000a\u0009\u0009passport.authenticate('naver', null), function(req, res) {\u000d\u000a\u0009    \u0009console.log('/auth/naver failed, stopped');\u000d\u000a\u0009    });\u000d\u000a\u0009\u000d\u000a\u0009// creates an account if no account of the new user\u000d\u000a\u0009app.get('/auth/naver/callback', \u000d\u000a\u0009\u0009passport.authenticate('naver', {\u000d\u000a\u0009        failureRedirect: '#!/auth/login'\u000d\u000a\u0009    }), function(req, res) {\u000d\u000a\u0009    \u0009res.redirect('/'); \u000d\u000a\u0009    });\u000d\u000a\u0009\u000d\u000a\u0009app.get('/logout', function(req, res){\u000d\u000a\u0009\u0009req.logout();\u000d\u000a\u0009\u0009res.redirect('/');\u000d\u000a\u0009});\u000d\u000a\u0009\u000d\u000a\u0009app.listen(3000);\u000d\u000a\u0009\u000d\u000a\u0009function ensureAuthenticated(req, res, next) {\u000d\u000a\u0009\u0009if (req.isAuthenticated()) { return next(); }\u000d\u000a\u0009\u0009res.redirect('/login');\u000d\u000a\u0009}\u000d\u000a\u000d\u000a\u000d\u000a## Thanks to \u000d\u000a\u000d\u000a  - [Jared Hanson](http://github.com/jaredhanson)\u000d\u000a  - Chanhee Kim(chanhee.kim@navercorp.com)\u000d\u000a\u000d\u000a## Author\u000d\u000a\u000d\u000a  - [Young-il Cho](http://github.com/terzeron)\u000d\u000a  - [Seunglak Choi](http://github.com/seunglak)\u000d\u000a  \u000d\u000a## License\u000d\u000a\u000d\u000a[The MIT License](http://opensource.org/licenses/MIT)\u000d\u000a\u000d\u000aCopyright (c) 2014 Naver Corp.\u000d\u000a","_id":"passport-naver@1.0.2","_shasum":"f99456fa12c806e06415d69f46946bc824f89aa6","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"seunglak","email":"seunglak@gmail.com"},"maintainers":[{"name":"seunglak","email":"seunglak@gmail.com"}],"dist":{"shasum":"f99456fa12c806e06415d69f46946bc824f89aa6","tarball":"http://registry.npmjs.org/passport-naver/-/passport-naver-1.0.2.tgz"}}: passport-naver
67 error     at RegClient.<anonymous> (c:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:273:14)
67 error     at Request._callback (c:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:211:65)
67 error     at Request.self.callback (c:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:123:22)
67 error     at Request.EventEmitter.emit (events.js:98:17)
67 error     at Request.<anonymous> (c:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:893:14)
67 error     at Request.EventEmitter.emit (events.js:117:20)
67 error     at IncomingMessage.<anonymous> (c:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:844:12)
67 error     at IncomingMessage.EventEmitter.emit (events.js:117:20)
67 error     at _stream_readable.js:919:16
67 error     at process._tickCallback (node.js:419:13)
68 error If you need help, you may report this *entire* log,
68 error including the npm and node versions, at:
68 error     <http://github.com/npm/npm/issues>
69 error System Windows_NT 6.1.7601
70 error command "c:\\Program Files\\nodejs\\node.exe" "c:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
71 error cwd c:\Users\Administrator\Documents\passport-naver
72 error node -v v0.10.28
73 error npm -v 1.4.9
74 verbose exit [ 1, true ]
